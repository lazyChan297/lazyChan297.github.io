(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{423:function(t,e,v){"use strict";v.r(e);var _=v(45),c=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"超越git基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#超越git基础"}},[t._v("#")]),t._v(" 超越Git基础")]),t._v(" "),v("h2",{attrs:{id:"head"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" HEAD")]),t._v(" "),v("h3",{attrs:{id:"指向某一个提交"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指向某一个提交"}},[t._v("#")]),t._v(" 指向某一个提交")]),t._v(" "),v("p",[t._v("指针，HEAD默认指向当前分支的最近一次（上一次）提交，通过移动指针HEAD，可以指向某一次提交记录；\n"),v("code",[t._v("git checkout HEAD fed2da64c0efc5293610bdd892f82a58e8cbc5d8")]),t._v("，哈希值可以通过"),v("code",[t._v("git log")]),t._v("查看")]),t._v(" "),v("h3",{attrs:{id:"相对引用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#相对引用"}},[t._v("#")]),t._v(" 相对引用")]),t._v(" "),v("p",[t._v("使HEAD指向当前提交的父节点，"),v("code",[t._v("git checkout HEAD^")]),t._v("，"),v("code",[t._v("^")]),t._v("表示向上移动一个节点，所以"),v("code",[t._v("git checkout HEAD^^")]),t._v("即父节点的父节点\n向上移动n个节点，推荐你使用"),v("code",[t._v("git checkout HEAD～n")]),t._v(", "),v("code",[t._v("n")]),t._v("的值就是你向上移动的节点数\n记住，每执行一次"),v("em",[t._v("移动HEAD")]),t._v("，指针也会随之移动，不再是你当前分支的最近一次提交记录了。")]),t._v(" "),v("h3",{attrs:{id:"强制分支移动到某一个节点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强制分支移动到某一个节点"}},[t._v("#")]),t._v(" 强制分支移动到某一个节点")]),t._v(" "),v("p",[v("code",[t._v("git branch -f branchName 节点哈希值")]),t._v(" 也可以 "),v("code",[t._v("git branch -f branchName HEAD～n")]),t._v("，记住 使用"),v("code",[t._v("git branch -f ...")]),t._v("改变的是分支而不是HEAD")]),t._v(" "),v("h2",{attrs:{id:"撤销变更"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#撤销变更"}},[t._v("#")]),t._v(" 撤销变更")]),t._v(" "),v("p",[v("code",[t._v("reset")]),t._v("会改变提交历史，commit遗弃；\n例如"),v("code",[t._v("git reset --mixed")]),t._v("(默认是mixed) 遗弃的是暂存区的commit；\n例如"),v("code",[t._v("git reset --hard")]),t._v("，遗弃的是暂存区的commit，工作区也会回退，遗弃改变的内容；\n例如"),v("code",[t._v("git reset --soft")]),t._v("，暂存区、工作区都不会改变；\n例如"),v("code",[t._v("git reset HEAD~1")]),t._v(" 或者 "),v("code",[t._v("git reset <hash>")]),t._v("取消上一次commit或某一次的提交，\n对于本地分支（没有被push的commit）而言，使用"),v("code",[t._v("reset")]),t._v("就可以把提交历史抹掉；")]),t._v(" "),v("p",[v("code",[t._v("revert")]),t._v(" 会「增加一段抹掉的历史的历史」，例如提交&push了c1版本，"),v("code",[t._v("revert")]),t._v("后会在提交的时间线上增加"),v("code",[t._v("c1‘")]),t._v("，对于内容而言和"),v("code",[t._v("reset")]),t._v("一致，区别在于提交历史的表现不同")])])}),[],!1,null,null,null);e.default=c.exports}}]);