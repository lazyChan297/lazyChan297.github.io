(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{367:function(t,v,e){"use strict";e.r(v);var _=e(45),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"安全防范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全防范"}},[t._v("#")]),t._v(" 安全防范")]),t._v(" "),e("h2",{attrs:{id:"攻击方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#攻击方式"}},[t._v("#")]),t._v(" 攻击方式")]),t._v(" "),e("h3",{attrs:{id:"xss跨站脚本攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss跨站脚本攻击"}},[t._v("#")]),t._v(" XSS跨站脚本攻击")]),t._v(" "),e("p",[t._v("通过植入恶意代码，使代码在浏览器或者服务器中执行，从而达到攻击的目的")]),t._v(" "),e("h4",{attrs:{id:"反射型xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反射型xss"}},[t._v("#")]),t._v(" 反射型XSS")]),t._v(" "),e("p",[t._v("攻击者将包含注入恶意代码的链接发送给用户，当用户点击该链接时，目标服务器不作任何处理把脚本"),e("strong",[t._v("反射")]),t._v("到用户的浏览器，从而使浏览器执行恶意代码"),e("br"),t._v("\n常见于邮箱链、网页链接跳转")]),t._v(" "),e("h4",{attrs:{id:"存储型xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储型xss"}},[t._v("#")]),t._v(" 存储型XSS")]),t._v(" "),e("p",[t._v("常见于网站的评论、私信功能，将恶意代码连同数据一并提交到数据库中。当用户请求数据时，服务器连同恶意代码一并返回，当用户解析到html执行时也会执行恶意代码"),e("br")]),t._v(" "),e("h4",{attrs:{id:"dom-based型xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-based型xss"}},[t._v("#")]),t._v(" DOM-based型XSS")]),t._v(" "),e("p",[t._v("利用客户端的JavaScript可以插入html结构的特点，在"),e("code",[t._v("document.write()")]),t._v("，"),e("code",[t._v("innerHTML")]),t._v("，"),e("code",[t._v("window.location")]),t._v("，"),e("code",[t._v("a标签的href属性")]),t._v("注入恶意代码脚本，从而使攻击者的代码可以在浏览器中执行")]),t._v(" "),e("h4",{attrs:{id:"xss攻击防范方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击防范方法"}},[t._v("#")]),t._v(" XSS攻击防范方法")]),t._v(" "),e("ul",[e("li",[t._v("对于存储型XSS和反射型XSS\n"),e("ul",[e("li",[t._v("服务端需要对提交的数据进行过滤，不保存恶意代码到数据库中")]),t._v(" "),e("li",[t._v("客户端需要对拼接到html的代码进行转义，将"),e("code",[t._v('&，<，>，"，/，')]),t._v(" 转义为实体字符，防止嵌套在script标签中的代码执行")])])]),t._v(" "),e("li",[t._v("对于DOM-based型XSS\n"),e("ul",[e("li",[t._v("使用"),e("code",[t._v(".innerHTML")]),t._v("、"),e("code",[t._v(".outerHTML")]),t._v("、"),e("code",[t._v("document.write()")]),t._v(" 时要特别小心，不要把不可信的数据作为 "),e("code",[t._v("HTML")]),t._v(" 插到页面上，而应尽量使用 "),e("code",[t._v(".textContent")]),t._v("、"),e("code",[t._v(".setAttribute()")]),t._v("、"),e("code",[t._v(".innerText")]),t._v(" 等")]),t._v(" "),e("li",[t._v("使用"),e("code",[t._v("a标签")]),t._v("，"),e("code",[t._v('location.href=""')]),t._v("，要验证其内容，以javascript:开头的链接和其他的非法schema都要禁止")])])]),t._v(" "),e("li",[t._v("设置cookie的读写权限，使cookie不会被注入的恶意代码读取，从而达到不被通过cookie窃取到用户信息的目的\n"),e("ul",[e("li",[e("code",[t._v("HttpOnly")]),t._v(": 只允许http或https请求读取cookie、JS代码是无法读取cookie的，如果通过document.cookie读取，会显示http-only的cookie项被自动过滤掉")]),t._v(" "),e("li",[e("code",[t._v("secure")]),t._v(": 只允许https请求读取")]),t._v(" "),e("li",[e("code",[t._v("HostOnly")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("true")]),t._v(": 只有浏览器url与cookie的domain属性完全相等时才可以使用；")]),t._v(" "),e("li",[e("code",[t._v("false")]),t._v(": 浏览器url与cookie的domain属性的二级域名和顶级域名相等就可以使用；")])])])])]),t._v(" "),e("li",[t._v("使用内容安全策略，开发者明确告诉浏览器哪些资源是可以加载的设置csp白名单，禁止一切名单外的代码注入执行\n"),e("ul",[e("li",[t._v("在http响应头部设置Content-Security-Policy\n"),e("ul",[e("li",[e("code",[t._v("script-src: 'self'")]),t._v(" 限制只允许加载本域的脚本")]),t._v(" "),e("li",[e("code",[t._v("style-src: url")]),t._v(" 限制样式表允许加载的url")]),t._v(" "),e("li",[e("code",[t._v("child-src https:")]),t._v(" 限制iframe标签必须使用https加载")])])]),t._v(" "),e("li",[t._v("在html的meta标签http-equiv为Content-Security-Policy\n"),e("code",[t._v("<meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'self'; object-src 'none'; style-src cdn.example.org third-party.org; child-src https:\">")])])])])]),t._v(" "),e("h3",{attrs:{id:"csrf跨站请求伪造"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf跨站请求伪造"}},[t._v("#")]),t._v(" CSRF跨站请求伪造")]),t._v(" "),e("p",[t._v("诱导用户或者在用户非自愿的情况下，利用Cookie默认会随着请求一起发送的特性，冒充用户向服务器发起非预期的请求")]),t._v(" "),e("ul",[e("li",[t._v("在图片资源中夹带恶意请求，例如在某论坛评论了一张图片，该图片url是恶意请求，这样一旦加载图片不管用户是否自愿都会发起请求")]),t._v(" "),e("li",[t._v("诱导用户点击")])]),t._v(" "),e("p",[e("strong",[t._v("跨站")]),e("br"),t._v("\n顶级域名"),e("code",[t._v(".com")]),t._v("+二级域名"),e("code",[t._v(".72lsy")]),t._v("+协议相同，但是端口号不同时，称为跨站"),e("br")]),t._v(" "),e("h4",{attrs:{id:"防范方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防范方法"}},[t._v("#")]),t._v(" 防范方法")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("限制cookie的发送")]),t._v(" 设置"),e("code",[t._v("Set-cookie")]),t._v("的SameSite属性，Chrome的SameSite默认值是Lax，而Safari的默认值是Strict\n"),e("ul",[e("li",[e("code",[t._v("SameSite=Strict")]),t._v(" 跨站点时，任何情况下cookie都不会发送")]),t._v(" "),e("li",[e("code",[t._v("SameSite=Lax")]),t._v(" 通过其它网站跳转过来的时候，只有"),e("code",[t._v("a标签链接")]),t._v("、"),e("code",[t._v("预加载链接")]),t._v("、"),e("code",[t._v("get")]),t._v("请求会发送cookie")]),t._v(" "),e("li",[e("code",[t._v("SameSite=none")]),t._v(" 无论是否跨站都会发送cookie")])])]),t._v(" "),e("li",[e("strong",[t._v("使用token代替cookie")]),t._v(" 因为token由客户端保存、提交、不会随着请求一起自动发送，只要保证token的安全就可以保证用户信息不被冒充使用")])]),t._v(" "),e("h3",{attrs:{id:"中间人攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[t._v("#")]),t._v(" 中间人攻击")]),t._v(" "),e("p",[e("strong",[t._v("攻击原理")])]),t._v(" "),e("ul",[e("li",[t._v("对于非HTTPS请求，因为通信前没有进行服务器验证，通信数据没有加密，中间人可以直接劫持服务器和客户端的通信，直接抓取报文就可以获得明文信息、篡改信息")]),t._v(" "),e("li",[t._v("对于HTTPS请求，通过伪造的CA认证机构证书（例如用户不慎信任了代理服务器伪造的CA认证机构的证书），这时伪造的CA认证机构证书就会欺瞒客户端认为代理服务器是可信的，客户端就会使用代理服务器的公钥，对接下来通信中要对数据加密的密钥加密，代理服务器收到加密的密钥后就可以使用自己的私钥对加密后的密钥解密了。")])]),t._v(" "),e("h4",{attrs:{id:"防范方法-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防范方法-2"}},[t._v("#")]),t._v(" 防范方法")]),t._v(" "),e("p",[t._v("HTTPS请求可以一定程度地防止中间人攻击，因为通信前会进行身份认证，通过权威CA认证机构的证书可以鉴别数字证书真实性，"),e("strong",[t._v("防止中间人冒充身份")]),e("br"),t._v("\n其次通信过程中数据被加密且会对数据进行完整性检查，"),e("strong",[t._v("防止数据被劫持篡改")]),e("br"),t._v("\n但是如果用户信任了中间人伪造的CA认证证书，那么依然可以被攻击。使用"),e("code",[t._v("charles")]),t._v("等抓包工具抓取https请求时就是事先在客户端信任了抓包工具的证书，从而监听数据。\n"),e("RouterLink",{attrs:{to:"/networkAngBrowser/https/"}},[t._v("HTTPS加密原理详细")])],1)])}),[],!1,null,null,null);v.default=s.exports}}]);