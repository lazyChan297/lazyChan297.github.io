(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{419:function(v,_,t){"use strict";t.r(_);var e=t(45),o=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"css其它记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css其它记录"}},[v._v("#")]),v._v(" CSS其它记录")]),v._v(" "),t("h2",{attrs:{id:"选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择器"}},[v._v("#")]),v._v(" 选择器")]),v._v(" "),t("p",[t("strong",[v._v("优先级")])]),v._v(" "),t("p",[t("code",[v._v("!important")]),v._v(" -> "),t("code",[v._v("内联（1000）")]),v._v(" -> "),t("code",[v._v("id(0100)")]),v._v(" -> "),t("code",[v._v("类,伪类,属性选择器（0010）")]),v._v(" -> "),t("code",[v._v("元素,伪元素（0001）")]),v._v(" -> "),t("code",[v._v("通配符(0000)")]),v._v("\n如果权重相加一致，那么就以最新的样式表为准")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("伪类选择器，选择的是真实存在dom结构上，且满足逻辑判断标识的元素，例如第一个子元素 "),t("code",[v._v(":first-child")])])]),v._v(" "),t("li",[t("p",[v._v("伪元素，是不存在dom结构中添加的虚拟元素，例如"),t("code",[v._v("::after")]),v._v("和"),t("code",[v._v("::before")]),v._v("用来在元素节点前后添加一个虚拟的元素，"),t("code",[v._v("::placeholder")]),v._v("是选择input标签的文字占位符\n"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements",target:"_blank",rel:"noopener noreferrer"}},[v._v("详细的列表可以查看该规范"),t("OutboundLink")],1)])])]),v._v(" "),t("p",[t("strong",[v._v("解析顺序")])]),v._v(" "),t("p",[v._v("从右到左解析，例如，"),t("code",[v._v(".list li {}")]),v._v(" 会先匹配li标签，接着匹配类名list\n如果从左到右解析，从css dom的根节点开始查找，当匹配到某一个子节点不符合时回溯到根节点重新查询这样会使查询的时间增加很多，如果从右到左解析，从则从一开始就筛选掉很多不匹配规则的元素，明显的减少了性能上的损耗")]),v._v(" "),t("h2",{attrs:{id:"文档流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档流"}},[v._v("#")]),v._v(" 文档流")]),v._v(" "),t("p",[t("strong",[v._v("文档标准流")]),v._v("\n所有的节点默认遵循文档标准流，行内与元素从左到右排列，如果宽度不够自动换行；块级元素独占一行，自上而下排列")]),v._v(" "),t("p",[t("strong",[v._v("脱离文档标准流")])]),v._v(" "),t("ol",[t("li",[v._v("元素浮动")]),v._v(" "),t("li",[v._v("绝对定位和固定定位")])]),v._v(" "),t("p",[t("strong",[v._v("脱离文档标准流的影响")]),v._v(" 虽然脱离标准流可以实现一些定位需求，但是会造成一些副作用")]),v._v(" "),t("ol",[t("li",[v._v("假如浮动元素没有占满父元素高度，浮动元素的同级不浮动元素高度超过浮动元素会出现围绕的情况，跑到浮动元素的下方，造成布局混乱")]),v._v(" "),t("li",[v._v("浮动的元素之间会互相贴靠")]),v._v(" "),t("li",[v._v("如果浮动元素没有定义宽高，那么它的高度就会变成实际内容的宽高")]),v._v(" "),t("li",[v._v("元素浮动后，是不会填充父元素的高度的")])]),v._v(" "),t("p",[t("strong",[v._v("清除浮动解决脱标的影响")])]),v._v(" "),t("ol",[t("li",[v._v("给父元素设置高度，但是如果父元素的高度是由子元素填充的话这个方法会不够灵活")]),v._v(" "),t("li",[v._v("给父元素设置overflow: hidden;")]),v._v(" "),t("li",[v._v("给父元素增加一个伪元素")]),v._v(" "),t("li",[v._v("在浮动元素同级下增加一个空元素，设置样式"),t("code",[v._v("clean:both")]),v._v("表示当前元素两边都不允许有浮动元素")])]),v._v(" "),t("h2",{attrs:{id:"bfc块级格式化上下文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bfc块级格式化上下文"}},[v._v("#")]),v._v(" BFC块级格式化上下文")]),v._v(" "),t("p",[v._v("是css盒模型的渲染模式，指的是当前模型形成一个独立的渲染区域里面的元素不会影响外部")]),v._v(" "),t("p",[t("strong",[v._v("创建方法")])]),v._v(" "),t("ol",[t("li",[t("code",[v._v("float")]),v._v("的值不是"),t("code",[v._v("none")])]),v._v(" "),t("li",[t("code",[v._v("position")]),v._v("的值不是"),t("code",[v._v("static")]),v._v("或"),t("code",[v._v("relative")])]),v._v(" "),t("li",[t("code",[v._v("display: table-cell | table-caption | inline-block")])]),v._v(" "),t("li",[v._v("除了overflow: visible以外的值")])]),v._v(" "),t("p",[t("strong",[v._v("布局规则")])]),v._v(" "),t("ol",[t("li",[v._v("解决margin重叠（当元素垂直排列时排列的间隔由上下两个元素之间的margin会折叠以值大的为准）")]),v._v(" "),t("li",[v._v("解决float引起的重叠，计算bfc高度时，float元素的高度也会包含在内，由此可以实现两栏布局/三栏布局，但是有更好的实现方式"),t("RouterLink",{attrs:{to:"/css/Flex/"}},[v._v("Flex布局")])],1),v._v(" "),t("li",[v._v("BFC内的元素与外面的元素相互独立，不受影响")])]),v._v(" "),t("h2",{attrs:{id:"盒子模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[v._v("#")]),v._v(" 盒子模型")]),v._v(" "),t("p",[v._v("CSS中每一个元素被视为一个矩形盒子，盒子包含了"),t("code",[v._v("padding")]),v._v(" "),t("code",[v._v("border")]),v._v(" "),t("code",[v._v("content")]),v._v(" "),t("code",[v._v("margin")])]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("标准盒子模型")]),v._v(" 默认值，"),t("code",[v._v("box-sizing: content-box")]),v._v("设置width只会赋值给"),t("code",[v._v("content")]),v._v("，不包含"),t("code",[v._v("padding")]),v._v(" "),t("code",[v._v("border")]),v._v("的值，height同理")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("怪异盒子模型")]),v._v(" "),t("code",[v._v("box-sizing:border-box")]),v._v("，设置width包含了"),t("code",[v._v("padding")]),v._v(" "),t("code",[v._v("border")]),v._v(" "),t("code",[v._v("content")]),v._v("，"),t("code",[v._v("content = width - padding*2 - border*2")]),v._v("的值，高度同理"),t("br")])]),v._v(" "),t("li",[t("p",[t("strong",[t("code",[v._v("auto")]),v._v("值的计算")]),v._v(" 块级盒子满足该等式\n"),t("code",[v._v("margin-left")]),v._v("+"),t("code",[v._v("border-left-width")]),v._v("+"),t("code",[v._v("padding-left")]),v._v("+"),t("code",[v._v("width")]),v._v("+"),t("code",[v._v("padding-right")]),v._v("+"),t("code",[v._v("border-right-width")]),v._v("+"),t("code",[v._v("margin-right")]),v._v("="),t("code",[v._v("width of containing block")]),t("br"),v._v("\n当且仅当有一个其中某一个属性值为auto时，该auto的值令该等式成立，等于"),t("br"),v._v(" "),t("code",[v._v("margin-left")]),v._v(" = "),t("code",[v._v("width of containing block")]),v._v("-"),t("code",[v._v("border-left-width")]),v._v("-"),t("code",[v._v("padding-left")]),v._v("-"),t("code",[v._v("width")]),v._v("-"),t("code",[v._v("padding-right")]),v._v("-"),t("code",[v._v("border-right-width")]),v._v("-"),t("code",[v._v("margin-right")])])])]),v._v(" "),t("h2",{attrs:{id:"关于属性的百分比属性值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于属性的百分比属性值"}},[v._v("#")]),v._v(" 关于属性的百分比属性值")]),v._v(" "),t("p",[v._v("对不同的属性设置百分比有不同的基准")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性名")]),v._v(" "),t("th",[v._v("基准")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("translate")]),v._v(" "),t("td",[v._v("自身的宽高")])]),v._v(" "),t("tr",[t("td",[v._v("margin/padding/left/right")]),v._v(" "),t("td",[v._v("父级的width")])]),v._v(" "),t("tr",[t("td",[v._v("top/bottom/height")]),v._v(" "),t("td",[v._v("父级的height")])]),v._v(" "),t("tr",[t("td",[v._v("line-height")]),v._v(" "),t("td",[v._v("自身字体大小")])])])]),v._v(" "),t("h2",{attrs:{id:"display-opacity-visibility"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#display-opacity-visibility"}},[v._v("#")]),v._v(" display/opacity/visibility")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性")]),v._v(" "),t("th",[v._v("性能")]),v._v(" "),t("th",[v._v("对子孙节点的影响")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("display")]),v._v(" "),t("td",[v._v("会引起浏览器回流，因为Dom结构改变，none时不再占位")]),v._v(" "),t("td",[v._v("不具备继承性，随父节点消失")])]),v._v(" "),t("tr",[t("td",[v._v("opacity")]),v._v(" "),t("td",[v._v("使用GPU线程绘制，性能最优，值为0时依然占位")]),v._v(" "),t("td",[v._v("不具备继承性，随父节点消失")])]),v._v(" "),t("tr",[t("td",[v._v("visibility")]),v._v(" "),t("td",[v._v("会引起浏览器重绘，hidden时依然占位")]),v._v(" "),t("td",[v._v("具备继承性，子孙节点可以重新赋值可见")])])])])])}),[],!1,null,null,null);_.default=o.exports}}]);