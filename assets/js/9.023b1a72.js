(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{362:function(t,v,_){"use strict";_.r(v);var e=_(45),s=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"浏览器运行机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器运行机制"}},[t._v("#")]),t._v(" 浏览器运行机制")]),t._v(" "),_("p",[t._v("以用户输入URL为起点到最终页面呈现，分析浏览器的进程和线程之间是如何运作的")]),t._v(" "),_("h2",{attrs:{id:"浏览器架构模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构模式"}},[t._v("#")]),t._v(" 浏览器架构模式")]),t._v(" "),_("p",[t._v("以chrome为例，采用的是多进程架构模式。"),_("br")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("浏览器主进程")]),t._v("，负责用户显示、用户交互、子进程管理、存储功能")]),t._v(" "),_("li",[_("strong",[t._v("GPU进程")]),t._v("，负责页面、CSS 3D效果的绘制")]),t._v(" "),_("li",[_("strong",[t._v("网络进程")]),t._v("，负责网络资源加载")]),t._v(" "),_("li",[_("strong",[t._v("插件进程")]),t._v("，负责运行插件，同时防止插件崩溃导致整个浏览器无法运行所以使用单独的进程来运行")]),t._v(" "),_("li",[_("strong",[t._v("渲染进程")]),t._v("，该进程是多线程的，负责将HTML、CSS、JS转换为用户可以与之交互的网页，js的V8引擎，排版的Blink引擎都运行在该线程中\n"),_("ul",[_("li",[t._v("js线程")]),t._v(" "),_("li",[t._v("GUI绘制线程")]),t._v(" "),_("li",[t._v("事件触发线程")]),t._v(" "),_("li",[t._v("定时器线程")]),t._v(" "),_("li",[t._v("异步请求线程")]),t._v(" "),_("li",[t._v("合成线程")])])])]),t._v(" "),_("h2",{attrs:{id:"工作流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("用户输入URL")]),t._v("，浏览器主进程检查无误是合法的IP地址后，调度进程间通信，把URL发送给"),_("strong",[t._v("网络进程")]),_("br")]),t._v(" "),_("li",[_("strong",[t._v("网络进程")]),t._v("接收到URL之后开始"),_("RouterLink",{attrs:{to:"/networkAngBrowser/http-dns/"}},[t._v("DNS查询")]),_("br")],1),t._v(" "),_("li",[t._v("查询成功后，建立tcp连接过程，浏览器默认为每个域名分配6个tcp连接如果超出该值，则进入等待TCP队列"),_("br")]),t._v(" "),_("li",[t._v("请求成功后返回资源（html、css、js)")]),t._v(" "),_("li",[t._v("浏览器主进程检查当前URL是否与之前打开渲染进程的根域名相同，如果相同复用原来的进程，如果不同开启新的渲染进程"),_("br")]),t._v(" "),_("li",[_("strong",[t._v("渲染进程")]),t._v("将请求到的资源解析m如果解析过程中，到外链的js或样式表会阻塞解析\n"),_("ul",[_("li",[t._v("HTML解析器解析HTML文本构建DOM tree，从左到右从上到下")]),t._v(" "),_("li",[t._v("CSS解析器解析样式表构建CSSOM tree，如果有多个选择器则从右到左查询")]),t._v(" "),_("li",[t._v("根据DOM tree和CSSOM tree合成layout tree，计算该树的几何信息，接着对layout tree分层（如果样式中使用了z-index属性）得到一张或多张位图发送给合成线程，提交到合成线程，此后的操作不再阻塞主线程。")])])]),t._v(" "),_("li",[_("strong",[t._v("绘制页面")]),t._v("，合成线程利用GPU将位图绘制，优先绘制可见的和即将可见的节点，最后呈现到屏幕上")])]),t._v(" "),_("h2",{attrs:{id:"其它"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),_("p",[_("strong",[t._v("解析URL地址")]),t._v("\n对URL中有特殊字符或者文字进行编码")]),t._v(" "),_("ul",[_("li",[t._v("使用"),_("code",[t._v("encodeURIComponent")]),t._v("对"),_("code",[t._v(",/?:@&=+$#")]),t._v("转义")]),t._v(" "),_("li",[t._v("使用"),_("code",[t._v("encodeURI")]),t._v("仅仅对中文处理")])]),t._v(" "),_("div",{staticClass:"language-javascript extra-class"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.72lsy.vip?query=携带了中文&num=1+'")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// encodeURI只对中文处理，忽略了,/?:@&=+$#")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://www.72lsy.vip?query=%E6%90%BA%E5%B8%A6%E4%BA%86%E4%B8%AD%E6%96%87&num=1+")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// encodeURIComponent对,/?:@&=+$#进行转义")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http%3A%2F%2Fwww.72lsy.vip%3Fquery%3D%E6%90%BA%E5%B8%A6%E4%BA%86%E4%B8%AD%E6%96%87%26num%3D1%2B")]),t._v("\n")])])]),_("p",[_("strong",[t._v("DNS预解析")]),t._v("\n将其他域名的资源提前解析，例如图片链接通常会使用一个专门的域名来管理，那么可以配置"),_("code",[t._v('<link rel="dns-prefetch" href="//pic.xxx.com">')]),_("br"),t._v("\n如果是https请求，需要额外配置"),_("code",[t._v('<meta http-equiv="x-dns-prefetch-control" content="on">')]),_("br")]),t._v(" "),_("p",[_("strong",[t._v("prefetch和preload")])]),t._v(" "),_("ul",[_("li",[t._v("如果资源确定在当前页面加载，使用"),_("code",[t._v("rel=preload")]),t._v("，这样资源会提前下载减少等待时间，加载优先级会高于link标签的资源的优先级")]),t._v(" "),_("li",[t._v("如果资源确定在下一个页面加载，使用"),_("code",[t._v("rel=prefetch")]),t._v("，这样资源会在网络空闲时下载")])]),t._v(" "),_("p",[_("strong",[t._v("回流（重排）和重绘")])]),t._v(" "),_("ul",[_("li",[t._v("回流：涉及到计算节点的几何信息的"),_("strong",[t._v("读写")]),t._v("都会触发回流")]),t._v(" "),_("li",[t._v("重绘：涉及到节点的外观属性的都会触发重绘")])]),t._v(" "),_("p",[_("strong",[t._v("渲染方向的优化")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("异步加载资源")]),t._v(" script标签使用"),_("code",[t._v("async")]),t._v("或"),_("code",[t._v("defer")]),t._v("实现异步加载资源，使加载过程不阻塞页面的渲染，不过执行的过程仍然会阻塞")]),t._v(" "),_("li",[_("strong",[t._v("优化样式表")]),t._v("样式表下载、解析是会造成页面渲染阻塞的，如果页面有骨架屏或者启动样式，可以将该部分的样式分割，先加载该资源，剩余的样式链接使用"),_("code",[t._v("preload")]),t._v("提升它的优先级下载但并不会阻塞页面渲染")])]),t._v(" "),_("p",[_("strong",[t._v("不同资源加载的优先级")])]),t._v(" "),_("ul",[_("li",[t._v("HTML CSS文件加载优先级最高")]),t._v(" "),_("li",[t._v("其次到font字体文件")]),t._v(" "),_("li",[t._v("图片资源如果当前在视口出现优先级为High，否则为low")]),t._v(" "),_("li",[t._v("异步加载的脚本优先级最低")])])])}),[],!1,null,null,null);v.default=s.exports}}]);