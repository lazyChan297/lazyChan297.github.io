(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{417:function(v,_,e){"use strict";e.r(_);var l=e(45),i=Object(l.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"flex布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[v._v("#")]),v._v(" Flex布局")]),v._v(" "),e("h2",{attrs:{id:"父属性说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#父属性说明"}},[v._v("#")]),v._v(" 父属性说明")]),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("flex-direction")]),v._v(" 决定主轴的排列方式，")]),v._v(" "),e("ol",[e("li",[v._v("row横向（默认）、column纵向")]),v._v(" "),e("li",[v._v("row-reverse（横向，起点在右）、column-reverse（纵向，起点在下）")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("justify-content")]),v._v(" 主轴的对齐方式")]),v._v(" "),e("ol",[e("li",[v._v("flex-start左对齐（默认）")]),v._v(" "),e("li",[v._v("flex-end右对齐")]),v._v(" "),e("li",[v._v("center居中")]),v._v(" "),e("li",[v._v("space-between；两端对齐，元素间隔相等")]),v._v(" "),e("li",[v._v("space-around元素两侧间隔相等")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("align-items")]),v._v(" 与主轴垂直交叉的轴线的对齐方式")]),v._v(" "),e("ol",[e("li",[v._v("stretch如果元素未设置高度或设为auto，将占满整个容器的高度（默认）")]),v._v(" "),e("li",[v._v("flex-start 与该轴起点对齐")]),v._v(" "),e("li",[v._v("flex-end 与该轴终点对齐")]),v._v(" "),e("li",[v._v("center 与该轴中间对齐")]),v._v(" "),e("li",[v._v("baseline与第一行文字对齐")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("align-content")]),v._v(" 多根与主轴垂直交叉的轴线对其方式，如果只有一根轴该属性无效")]),v._v(" "),e("ol",[e("li",[v._v("stretch轴线占满整个交叉轴（默认值）")]),v._v(" "),e("li",[v._v("flex-start与纵轴起点对齐")]),v._v(" "),e("li",[v._v("flex-end与纵轴终点对齐")]),v._v(" "),e("li",[v._v("center与纵轴中间对齐")]),v._v(" "),e("li",[v._v("space-between与交叉轴两端对齐，轴线之间的间隔平均分布")]),v._v(" "),e("li",[v._v("space-around每根轴线两侧的间隔都相等，轴线之间的间隔比轴线与边框的间隔大一倍")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("flex-wrap")]),v._v(" 决定主轴排列是否换行")]),v._v(" "),e("ol",[e("li",[v._v("nowrap不换行（默认）")]),v._v(" "),e("li",[v._v("wrap换行")]),v._v(" "),e("li",[v._v("wrap-reverse换行，第一行在下方")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("flex-flow")]),v._v(" "),e("code",[v._v("flex-direction")]),v._v("和"),e("code",[v._v("flex-wrap")]),v._v("的合并，默认值是"),e("code",[v._v("row nowrap")])])])]),v._v(" "),e("h2",{attrs:{id:"子属性说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子属性说明"}},[v._v("#")]),v._v(" 子属性说明")]),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("flex-grow")]),v._v(" 元素放大比例")]),v._v(" "),e("ul",[e("li",[v._v("默认值0，存在剩余空间不放大")]),v._v(" "),e("li",[v._v("计算法则\n"),e("ul",[e("li",[e("code",[v._v("剩余空间 = 父容器空间 - 所有子项空间的总和")])]),v._v(" "),e("li",[e("code",[v._v("可伸展大小 = 剩余空间 / 所有子元素的系数总和")])]),v._v(" "),e("li",[e("code",[v._v("子项伸展后的空间 = 子项自身的空间 + 子项伸展系数 * 可伸展大小")])])])])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("flex-shrink")]),v._v(" 元素缩小比例")]),v._v(" "),e("ul",[e("li",[v._v("默认值1，如果空间不足会以1为系数收缩，"),e("code",[v._v("收缩后的空间 = 当前子项空间 - 1 * （溢出的空间/所有子项个数）")])]),v._v(" "),e("li",[v._v("0，空间不足时也不会对子元素收缩")]),v._v(" "),e("li",[v._v("计算法则\n"),e("ul",[e("li",[e("code",[v._v("溢出的空间 = 所有子项空间加起来的总和 - 父容器空间")])]),v._v(" "),e("li",[e("code",[v._v("权重 = 所有子项空间*该子项收缩系数的总和")])]),v._v(" "),e("li",[e("code",[v._v("当前子元素收缩空间 = 溢出的空间 * 当前子元素空间 * 收缩系数 / 权重")])]),v._v(" "),e("li",[e("code",[v._v("收缩后的空间 = 当前子元素原本空间 - 当前子元素收缩空间")])])])])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("flex-basis")]),v._v(" 在不伸缩情况下子元素基准的大小，横向排列时代表宽度，纵向排列代表高度，如果设置了百分比则以父容器的空间为基准，默认是"),e("code",[v._v("auto")]),v._v("，代表由自身内容大小决定")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("flex")]),v._v(" "),e("code",[v._v("flex-grow")]),v._v(" "),e("code",[v._v("flex-shrink")]),v._v(" "),e("code",[v._v("flex-basis")]),v._v(" 三个属性的合并缩写")]),v._v(" "),e("ul",[e("li",[v._v("单值语法\n"),e("ul",[e("li",[v._v("只有1个无单位数字时，值对应的是"),e("code",[v._v("flex-grow")]),v._v("，其它值默认")]),v._v(" "),e("li",[v._v("只有1个值有单位数字时，值对应的是"),e("code",[v._v("flex-basis")]),v._v("，其它值默认")]),v._v(" "),e("li",[v._v("只要1个关键字值时，"),e("code",[v._v("none")]),v._v(" => "),e("code",[v._v("0 0 auto")]),v._v("，"),e("code",[v._v("auto")]),v._v(" => "),e("code",[v._v("1 1 auto")]),v._v("，"),e("code",[v._v("initial")]),v._v(" => "),e("code",[v._v("0 1 auto")])])])]),v._v(" "),e("li",[v._v("双值语法\n"),e("ul",[e("li",[v._v("1个无单位数字，1个有单位数字，对应的值是"),e("code",[v._v("flex-grow")]),v._v("，"),e("code",[v._v("flex-basis")])]),v._v(" "),e("li",[v._v("都是无单位数字，对应的值是"),e("code",[v._v("flex-grow")]),v._v("，"),e("code",[v._v("flex-shrink")])])])])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("align-self")]),v._v(" 覆盖父元素的align-items，属性值与align-items一致")])])])])}),[],!1,null,null,null);_.default=i.exports}}]);